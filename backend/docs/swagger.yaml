definitions:
  delivery.errorResponse:
    properties:
      message:
        type: string
    type: object
  delivery.successResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  dto.EmailInput:
    properties:
      email:
        type: string
      message:
        type: string
      subject:
        type: string
    required:
    - email
    - message
    - subject
    type: object
  dto.User:
    properties:
      name:
        type: string
      password_hash:
        type: string
      username:
        type: string
    required:
    - name
    - password_hash
    - username
    type: object
info:
  contact: {}
paths:
  /user:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/delivery.successResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user in the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Create a new user
      tags:
      - users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user from the system by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.successResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Delete user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user information by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.successResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Update user by ID
      tags:
      - users
  /user/email:
    post:
      consumes:
      - application/json
      description: Send an email to the specified address
      parameters:
      - description: Email input
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/dto.EmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Send an email
      tags:
      - email
  /user/page:
    get:
      consumes:
      - application/json
      description: Retrieve a pagination list of all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/delivery.successResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Get pagination Order
      tags:
      - orders
  /user/tag/{id}:
    get:
      consumes:
      - application/json
      description: Get tags information by user ID
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.successResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Get User by tagID
      tags:
      - tags
  /user/tags:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/delivery.successResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Get all tags
      tags:
      - tags
  /user/usertags/{id}:
    get:
      consumes:
      - application/json
      description: Get user's tag information by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.successResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.errorResponse'
      summary: Get tags by UserID
      tags:
      - tags
swagger: "2.0"
